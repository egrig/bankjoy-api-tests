{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 3,
    "pending": 0,
    "failures": 4,
    "start": "2025-03-30T18:36:55.990Z",
    "end": "2025-03-30T18:36:57.710Z",
    "duration": 1720,
    "testsRegistered": 7,
    "passPercent": 42.857142857142854,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a1e2113b-8573-4fdc-961b-95d088143031",
      "title": "",
      "fullFile": "/Users/edward/Desktop/bankjoy-api-tests/test/forexTests.mjs",
      "file": "/test/forexTests.mjs",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3f75fe49-749c-4332-a14c-4deaefc7369e",
          "title": "Bank of Canada Forex API",
          "fullFile": "/Users/edward/Desktop/bankjoy-api-tests/test/forexTests.mjs",
          "file": "/test/forexTests.mjs",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should fetch CAD to USD conversion rates for the last 10 weeks",
              "fullTitle": "Bank of Canada Forex API should fetch CAD to USD conversion rates for the last 10 weeks",
              "timedOut": false,
              "duration": 144,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const data = await getForexRates(\"FXUSDCAD\");\nexpect(data).to.have.property(\"observations\").that.is.an(\"array\");\nexpect(data.observations).to.have.length.greaterThan(0);",
              "err": {},
              "uuid": "bb56aa91-3fe2-4329-a120-3b7e62733ab0",
              "parentUUID": "3f75fe49-749c-4332-a14c-4deaefc7369e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail gracefully when requesting an invalid currency pair",
              "fullTitle": "Bank of Canada Forex API should fail gracefully when requesting an invalid currency pair",
              "timedOut": false,
              "duration": 664,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    await getForexRates(\"INVALID_PAIR\");\n} catch (error) {\n    expect(error.message).to.include(\"API request failed:\");\n}",
              "err": {},
              "uuid": "44b40fb4-7f25-4a44-b781-f073ef4cce34",
              "parentUUID": "3f75fe49-749c-4332-a14c-4deaefc7369e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should calculate the average CAD to USD rate for the last 10 weeks",
              "fullTitle": "Bank of Canada Forex API should calculate the average CAD to USD rate for the last 10 weeks",
              "timedOut": false,
              "duration": 99,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const data = await getForexRates(\"FXUSDCAD\");\nconsole.log(data.observations);\nconst avgRate = calculateAverageRate(data.observations, \"FXUSDCAD\");\nexpect(avgRate).to.be.a(\"number\"). that.is.greaterThan(0);",
              "err": {
                "message": "Error: Rate not found for key: FXUSDCAD",
                "estack": "Error: Rate not found for key: FXUSDCAD\n    at file:///Users/edward/Desktop/bankjoy-api-tests/apiClient.mjs:21:19\n    at Array.map (<anonymous>)\n    at calculateAverageRate (file:///Users/edward/Desktop/bankjoy-api-tests/apiClient.mjs:18:32)\n    at Context.<anonymous> (file:///Users/edward/Desktop/bankjoy-api-tests/test/forexTests.mjs:24:25)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "50222866-d0b7-4fc2-ab0a-a9dbbe9b2c53",
              "parentUUID": "3f75fe49-749c-4332-a14c-4deaefc7369e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return an error for an empty response",
              "fullTitle": "Bank of Canada Forex API should return an error for an empty response",
              "timedOut": false,
              "duration": 557,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    await getForexRates(\"\");\n} catch (error) {\n    expect(error.message).to.include(\"API request failed\");\n}",
              "err": {},
              "uuid": "c4cbc4d5-e01f-44df-ab97-659a091a7436",
              "parentUUID": "3f75fe49-749c-4332-a14c-4deaefc7369e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fetch and calculate average for FXUSDCAD",
              "fullTitle": "Bank of Canada Forex API should fetch and calculate average for FXUSDCAD",
              "timedOut": false,
              "duration": 84,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const data = await getForexRates(pair);\nconst avgRate = calculateAverageRate(data.observations, pair);\nexpect(avgRate).to.be.a(\"number\").that.is.greaterThan(0);",
              "err": {
                "message": "Error: Rate not found for key: FXUSDCAD",
                "estack": "Error: Rate not found for key: FXUSDCAD\n    at file:///Users/edward/Desktop/bankjoy-api-tests/apiClient.mjs:21:19\n    at Array.map (<anonymous>)\n    at calculateAverageRate (file:///Users/edward/Desktop/bankjoy-api-tests/apiClient.mjs:18:32)\n    at Context.<anonymous> (file:///Users/edward/Desktop/bankjoy-api-tests/test/forexTests.mjs:41:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "26f70dbc-9416-440f-b851-43b9c20c3f79",
              "parentUUID": "3f75fe49-749c-4332-a14c-4deaefc7369e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fetch and calculate average for FXEURCAD",
              "fullTitle": "Bank of Canada Forex API should fetch and calculate average for FXEURCAD",
              "timedOut": false,
              "duration": 82,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const data = await getForexRates(pair);\nconst avgRate = calculateAverageRate(data.observations, pair);\nexpect(avgRate).to.be.a(\"number\").that.is.greaterThan(0);",
              "err": {
                "message": "Error: Rate not found for key: FXEURCAD",
                "estack": "Error: Rate not found for key: FXEURCAD\n    at file:///Users/edward/Desktop/bankjoy-api-tests/apiClient.mjs:21:19\n    at Array.map (<anonymous>)\n    at calculateAverageRate (file:///Users/edward/Desktop/bankjoy-api-tests/apiClient.mjs:18:32)\n    at Context.<anonymous> (file:///Users/edward/Desktop/bankjoy-api-tests/test/forexTests.mjs:41:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "242fba09-3126-4e6a-bc64-ffc40f7a1dfc",
              "parentUUID": "3f75fe49-749c-4332-a14c-4deaefc7369e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fetch and calculate average for FXGBPCAD",
              "fullTitle": "Bank of Canada Forex API should fetch and calculate average for FXGBPCAD",
              "timedOut": false,
              "duration": 83,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const data = await getForexRates(pair);\nconst avgRate = calculateAverageRate(data.observations, pair);\nexpect(avgRate).to.be.a(\"number\").that.is.greaterThan(0);",
              "err": {
                "message": "Error: Rate not found for key: FXGBPCAD",
                "estack": "Error: Rate not found for key: FXGBPCAD\n    at file:///Users/edward/Desktop/bankjoy-api-tests/apiClient.mjs:21:19\n    at Array.map (<anonymous>)\n    at calculateAverageRate (file:///Users/edward/Desktop/bankjoy-api-tests/apiClient.mjs:18:32)\n    at Context.<anonymous> (file:///Users/edward/Desktop/bankjoy-api-tests/test/forexTests.mjs:41:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "52d2b4f8-afec-470c-b4b6-d52751b91a24",
              "parentUUID": "3f75fe49-749c-4332-a14c-4deaefc7369e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bb56aa91-3fe2-4329-a120-3b7e62733ab0",
            "44b40fb4-7f25-4a44-b781-f073ef4cce34",
            "c4cbc4d5-e01f-44df-ab97-659a091a7436"
          ],
          "failures": [
            "50222866-d0b7-4fc2-ab0a-a9dbbe9b2c53",
            "26f70dbc-9416-440f-b851-43b9c20c3f79",
            "242fba09-3126-4e6a-bc64-ffc40f7a1dfc",
            "52d2b4f8-afec-470c-b4b6-d52751b91a24"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1713,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.1.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}