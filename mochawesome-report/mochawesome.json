{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2025-03-30T18:42:31.973Z",
    "end": "2025-03-30T18:42:33.255Z",
    "duration": 1282,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "181324ae-66b9-4a33-b3fe-39ee9374aaf1",
      "title": "",
      "fullFile": "/Users/edward/Desktop/bankjoy-api-tests/test/forexTests.mjs",
      "file": "/test/forexTests.mjs",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c9783635-0d40-4214-a70b-e006a0e3d8ef",
          "title": "Bank of Canada Forex API",
          "fullFile": "/Users/edward/Desktop/bankjoy-api-tests/test/forexTests.mjs",
          "file": "/test/forexTests.mjs",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should fetch CAD to USD conversion rates for the last 10 weeks",
              "fullTitle": "Bank of Canada Forex API should fetch CAD to USD conversion rates for the last 10 weeks",
              "timedOut": false,
              "duration": 188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const data = await getForexRates(\"FXUSDCAD\");\nexpect(data).to.have.property(\"observations\").that.is.an(\"array\");\nexpect(data.observations).to.have.length.greaterThan(0);",
              "err": {},
              "uuid": "f07e6193-a14a-43b0-a837-b98d23e08f51",
              "parentUUID": "c9783635-0d40-4214-a70b-e006a0e3d8ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail gracefully when requesting an invalid currency pair",
              "fullTitle": "Bank of Canada Forex API should fail gracefully when requesting an invalid currency pair",
              "timedOut": false,
              "duration": 200,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    await getForexRates(\"INVALID_PAIR\");\n} catch (error) {\n    expect(error.message).to.include(\"API request failed:\");\n}",
              "err": {},
              "uuid": "fb52e2a6-d228-4daf-b2a2-b708f48c021a",
              "parentUUID": "c9783635-0d40-4214-a70b-e006a0e3d8ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should calculate the average CAD to USD rate for the last 10 weeks",
              "fullTitle": "Bank of Canada Forex API should calculate the average CAD to USD rate for the last 10 weeks",
              "timedOut": false,
              "duration": 78,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const data = await getForexRates(\"FXUSDCAD\");\nconst avgRate = calculateAverageRate(data.observations, \"FXUSDCAD\");\nexpect(avgRate).to.be.a(\"number\"). that.is.greaterThan(0);",
              "err": {},
              "uuid": "0bd1194f-a46b-4b97-ada7-2cd6287c2d49",
              "parentUUID": "c9783635-0d40-4214-a70b-e006a0e3d8ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return an error for an empty response",
              "fullTitle": "Bank of Canada Forex API should return an error for an empty response",
              "timedOut": false,
              "duration": 564,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    await getForexRates(\"\");\n} catch (error) {\n    expect(error.message).to.include(\"API request failed\");\n}",
              "err": {},
              "uuid": "242dd2c1-1f71-4dcf-9a0b-8ab005316ad3",
              "parentUUID": "c9783635-0d40-4214-a70b-e006a0e3d8ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fetch and calculate average for FXUSDCAD",
              "fullTitle": "Bank of Canada Forex API should fetch and calculate average for FXUSDCAD",
              "timedOut": false,
              "duration": 76,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const data = await getForexRates(pair);\nconst avgRate = calculateAverageRate(data.observations, pair);\nexpect(avgRate).to.be.a(\"number\").that.is.greaterThan(0);",
              "err": {},
              "uuid": "e646358b-cb4b-4f3f-9338-a9746bdc9218",
              "parentUUID": "c9783635-0d40-4214-a70b-e006a0e3d8ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fetch and calculate average for FXEURCAD",
              "fullTitle": "Bank of Canada Forex API should fetch and calculate average for FXEURCAD",
              "timedOut": false,
              "duration": 77,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const data = await getForexRates(pair);\nconst avgRate = calculateAverageRate(data.observations, pair);\nexpect(avgRate).to.be.a(\"number\").that.is.greaterThan(0);",
              "err": {},
              "uuid": "b91fd34c-e717-48e2-9d35-b9c639ba1d63",
              "parentUUID": "c9783635-0d40-4214-a70b-e006a0e3d8ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fetch and calculate average for FXGBPCAD",
              "fullTitle": "Bank of Canada Forex API should fetch and calculate average for FXGBPCAD",
              "timedOut": false,
              "duration": 92,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const data = await getForexRates(pair);\nconst avgRate = calculateAverageRate(data.observations, pair);\nexpect(avgRate).to.be.a(\"number\").that.is.greaterThan(0);",
              "err": {},
              "uuid": "7f15e914-d663-41d2-8190-4385d8d4dcd3",
              "parentUUID": "c9783635-0d40-4214-a70b-e006a0e3d8ef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f07e6193-a14a-43b0-a837-b98d23e08f51",
            "fb52e2a6-d228-4daf-b2a2-b708f48c021a",
            "0bd1194f-a46b-4b97-ada7-2cd6287c2d49",
            "242dd2c1-1f71-4dcf-9a0b-8ab005316ad3",
            "e646358b-cb4b-4f3f-9338-a9746bdc9218",
            "b91fd34c-e717-48e2-9d35-b9c639ba1d63",
            "7f15e914-d663-41d2-8190-4385d8d4dcd3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1275,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.1.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}