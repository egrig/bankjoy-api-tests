{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 3,
    "pending": 0,
    "failures": 4,
    "start": "2025-03-30T18:27:29.367Z",
    "end": "2025-03-30T18:27:30.787Z",
    "duration": 1420,
    "testsRegistered": 7,
    "passPercent": 42.857142857142854,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0db15e7b-40a3-440c-92a4-f3e4f2c0791a",
      "title": "",
      "fullFile": "/Users/edward/Desktop/bankjoy-api-tests/test/forexTests.mjs",
      "file": "/test/forexTests.mjs",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6d44a372-1d11-40cc-8744-af4c62e7fe09",
          "title": "Bank of Canada Forex API",
          "fullFile": "/Users/edward/Desktop/bankjoy-api-tests/test/forexTests.mjs",
          "file": "/test/forexTests.mjs",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should fetch CAD to USD conversion rates for the last 10 weeks",
              "fullTitle": "Bank of Canada Forex API should fetch CAD to USD conversion rates for the last 10 weeks",
              "timedOut": false,
              "duration": 164,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const data = await getForexRates(\"FXUSDCAD\");\nexpect(data).to.have.property(\"observations\").that.is.an(\"array\");\nexpect(data.observations).to.have.length.greaterThan(0);",
              "err": {},
              "uuid": "a8b8fa6f-4c11-4207-9edb-e8378904e0aa",
              "parentUUID": "6d44a372-1d11-40cc-8744-af4c62e7fe09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail gracefully when requesting an invalid currency pair",
              "fullTitle": "Bank of Canada Forex API should fail gracefully when requesting an invalid currency pair",
              "timedOut": false,
              "duration": 257,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    await getForexRates(\"INVALID_PAIR\");\n} catch (error) {\n    expect(error.message).to.include(\"API request failed:\");\n}",
              "err": {},
              "uuid": "6efdc7f9-0509-41f0-9d0c-4aaa5516fa4e",
              "parentUUID": "6d44a372-1d11-40cc-8744-af4c62e7fe09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should calculate the average CAD to USD rate for the last 10 weeks",
              "fullTitle": "Bank of Canada Forex API should calculate the average CAD to USD rate for the last 10 weeks",
              "timedOut": false,
              "duration": 93,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const data = await getForexRates(\"FXUSDCAD\");\nconst avgRate = calculateAverageRate(data.observations, \"FXUSDCAD\");\nexpect(avgRate).to.be.a(\"number\"). that.is.greaterThan(0);",
              "err": {
                "message": "AssertionError: expected NaN to be above +0",
                "estack": "AssertionError: expected NaN to be above +0\n    at Context.<anonymous> (file:///Users/edward/Desktop/bankjoy-api-tests/test/forexTests.mjs:24:52)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- NaN\n+ 0\n"
              },
              "uuid": "55869e02-bcd5-4021-a7b2-b91edc3815ed",
              "parentUUID": "6d44a372-1d11-40cc-8744-af4c62e7fe09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return an error for an empty response",
              "fullTitle": "Bank of Canada Forex API should return an error for an empty response",
              "timedOut": false,
              "duration": 641,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    await getForexRates(\"\");\n} catch (error) {\n    expect(error.message).to.include(\"API request failed\");\n}",
              "err": {},
              "uuid": "3f5b589b-b0d8-417c-8a15-69933ea4db03",
              "parentUUID": "6d44a372-1d11-40cc-8744-af4c62e7fe09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fetch and calculate average for FXUSDCAD",
              "fullTitle": "Bank of Canada Forex API should fetch and calculate average for FXUSDCAD",
              "timedOut": false,
              "duration": 87,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const data = await getForexRates(pair);\nconst avgRate = calculateAverageRate(data.observations, pair);\nexpect(avgRate).to.be.a(\"number\").that.is.greaterThan(0);",
              "err": {
                "message": "AssertionError: expected NaN to be above +0",
                "estack": "AssertionError: expected NaN to be above +0\n    at Context.<anonymous> (file:///Users/edward/Desktop/bankjoy-api-tests/test/forexTests.mjs:41:55)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- NaN\n+ 0\n"
              },
              "uuid": "13d751d3-455f-4247-92b9-c5b1f3ae469c",
              "parentUUID": "6d44a372-1d11-40cc-8744-af4c62e7fe09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fetch and calculate average for FXEURCAD",
              "fullTitle": "Bank of Canada Forex API should fetch and calculate average for FXEURCAD",
              "timedOut": false,
              "duration": 79,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const data = await getForexRates(pair);\nconst avgRate = calculateAverageRate(data.observations, pair);\nexpect(avgRate).to.be.a(\"number\").that.is.greaterThan(0);",
              "err": {
                "message": "AssertionError: expected NaN to be above +0",
                "estack": "AssertionError: expected NaN to be above +0\n    at Context.<anonymous> (file:///Users/edward/Desktop/bankjoy-api-tests/test/forexTests.mjs:41:55)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- NaN\n+ 0\n"
              },
              "uuid": "a3efb87e-babf-4c5c-ad51-fa7346dc22b1",
              "parentUUID": "6d44a372-1d11-40cc-8744-af4c62e7fe09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fetch and calculate average for FXGBPCAD",
              "fullTitle": "Bank of Canada Forex API should fetch and calculate average for FXGBPCAD",
              "timedOut": false,
              "duration": 91,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const data = await getForexRates(pair);\nconst avgRate = calculateAverageRate(data.observations, pair);\nexpect(avgRate).to.be.a(\"number\").that.is.greaterThan(0);",
              "err": {
                "message": "AssertionError: expected NaN to be above +0",
                "estack": "AssertionError: expected NaN to be above +0\n    at Context.<anonymous> (file:///Users/edward/Desktop/bankjoy-api-tests/test/forexTests.mjs:41:55)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- NaN\n+ 0\n"
              },
              "uuid": "51b8d1a9-c0ed-479e-9e64-80b408d11229",
              "parentUUID": "6d44a372-1d11-40cc-8744-af4c62e7fe09",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a8b8fa6f-4c11-4207-9edb-e8378904e0aa",
            "6efdc7f9-0509-41f0-9d0c-4aaa5516fa4e",
            "3f5b589b-b0d8-417c-8a15-69933ea4db03"
          ],
          "failures": [
            "55869e02-bcd5-4021-a7b2-b91edc3815ed",
            "13d751d3-455f-4247-92b9-c5b1f3ae469c",
            "a3efb87e-babf-4c5c-ad51-fa7346dc22b1",
            "51b8d1a9-c0ed-479e-9e64-80b408d11229"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1412,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.1.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}